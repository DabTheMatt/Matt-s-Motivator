{"version":3,"sources":["components3/TopForm.js","components3/Quote.js","components3/Tab.js","App3.js","reportWebVitals.js","index.js"],"names":["TopForm","state","tabName","goal","serious","handleChange","e","setState","target","value","handleSeriusChange","console","log","handleGoalChange","name","preventDefault","this","props","addTask","className","onSubmit","handleSubmit","nameInput","goalInput","type","id","onChange","errorMsgName","errorMsgGoal","React","Component","Quote","Tab","time","calcGoalL","completePercentL","totalTime","max","addTime","style","background","bcgColor","onClick","toggleHide","visibility","seriuos","quote","author","joke","timeInput","times","map","Math","random","avarageTime","delTab","App3","startId","tasks","bcgColors","dataF","wheater","takeJoke","axios","get","then","res","data","randomQuote","parseInt","length","text","task","weekMax","tempTasks","reverse","delTask","delActivities","filter","tempActivities","shift","push","Number","reduce","p","c","toFixed","fetch","response","json","jsonData","taskList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beba0c58.chunk.js","sourcesContent":["import React from \"react\"\n\n\n\nclass TopForm extends React.Component {\n\n    state={\n        tabName: \"\",\n        goal: \"\",\n        serious: \"true\"\n    }\n    \n\n    handleChange = (e) => {\n        this.setState({\n            tabName: e.target.value\n        })\n    }\n\n    handleSeriusChange = (e) => {\n        \n            if (this.state.serious === \"true\") {\n                this.setState({\n                    serious: \"false\"\n        })\n            } else {\n                this.setState({\n                    serious: \"true\"\n                })\n            }\n            \n        console.log(\"serious\", this.state.serious);\n    }\n\n    handleGoalChange = (e) => {\n        this.setState({\n            goal: e.target.value\n        })\n    }\n\n    handleSubmit(e, name, goal, serious) {\n        e.preventDefault();\n        console.log(\"sss\");\n\n        this.props.addTask(name, goal, serious);\n\n        this.setState({\n            tabName: \"\",\n            goal: \"\"\n            \n        })\n    }\n\n    render() {\n        return (\n            <div className=\"topWrapper\">\n                <h1>Matt's Motivator</h1><br/>\n                <p className=\"about\">Probably each of us suffers (to a greater or lesser extent) from a condition called laziness.\n\nLaziness is not a bad thing if we are not preparing for a test or we have not promised ourselves that we will exercise every day.\n\nMatt's Motivator is designed to help you overcome laziness and get you to work.\n\nYou can do it in a more or less serious way, accompanied by jokes about Chuck Norris, or serious quotes from other smart (but not so smart, of course) people.</p>\n                \n\n                <form className=\"topForm\" onSubmit={e => this.handleSubmit(e, e.target.nameInput.value, e.target.goalInput.value, this.state.serious)}>\n                    <label>Activity name:</label>\n                    <br/>\n                    <input\n            \n                    type=\"text\"\n                    value={this.state.tabName}\n                    id=\"nameInput\"\n                    onChange={this.handleChange}\n                    />\n                    <br/>\n                    <label>Weekly hourly goal:</label>\n                    <br/>\n                    <input\n                    \n                    type=\"number\"\n                    value={this.state.goal}\n                    id=\"goalInput\"\n                    onChange={this.handleGoalChange}\n                    />\n                    <br/>\n                    <input\n                    type=\"checkbox\"\n                    value=\"true\"\n                    id=\"seriusInput\"\n                    onChange={this.handleSeriusChange}\n                    />\n                    <div className=\"serious\">Make it serious</div>\n                    \n                    <div className=\"errorMsg\">{this.props.errorMsgName}\n                {this.props.errorMsgGoal}</div>\n                    <button className=\"mainBtn\">Add</button>\n                </form>\n                \n                \n            </div>\n        );\n    }\n}\n\n\nexport default TopForm","import React, { useState } from 'react'\n\n\n\nconst config = {\n  apiUrl: 'https://type.fit/api/quotes',\n  repoUrl: 'https://github.com/ssokurenko/quotes-react-app'\n}\n\n\n\nfunction Quote () {\n    const [quotes, setQuotes] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    const Quote = ({ text, author }) => {\n      return (\n        <span>\n          <strong>{text}</strong> &nbsp; <span>{author}</span>\n        </span>\n      )\n    }\n  \n    const getQuotes = () => {\n      setQuotes([])\n      setIsLoading(true)\n      fetch(config.apiUrl)\n        .then(function (response) {\n          return response.json()\n        })\n        .then((data) => {\n          setQuotes(data)\n          setIsLoading(false)\n        })\n        .catch(() => {\n          setIsLoading(false)\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n        <div\n          size=\"small\"\n          loading={isLoading}\n          header={\n            <button\n              onClick={() => getQuotes()}\n              type=\"primary\"\n              \n              disabled={isLoading}\n              size=\"large\">\n              Fetch Quotes\n            </button>\n          }\n          footer={<a href={config.repoUrl}>Fork on Github</a>}\n          bordered\n          dataSource={quotes}\n          renderItem={(quote) => (\n            <div>\n              <div text={quote.text} author={quote.author} />\n            </div>\n          )}\n        />\n      </div>\n        </div>\n    )\n}\n\nexport default Quote","import React from \"react\";\nimport Quote from \"./Quote\";\n\nlet progressBcg;\n\nclass Tab extends React.Component {\n  state = {\n    time: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      time: e.target.value,\n    });\n  };\n\n  handleSubmit(e, time, id, max) {\n    e.preventDefault();\n\n    this.props.addTime(time, id, max);\n    console.log(\"timeeee\");\n\n    this.setState({\n      time: \"\",\n    });\n  }\n\n  calcGoalL = () => {\n    const completePercentL = this.props.totalTime / (this.props.goal / 100);\n\n    progressBcg = `conic-gradient(#6d4722 ${completePercentL}%, #ba7a3b ${completePercentL}% 100%)`;\n  };\n\n  render() {\n    return (\n      <div className=\"tabWrapper animate__animated animate__fadeIn\">\n        <div\n          className=\"tab topTab\"\n          style={{ background: `#${this.props.bcgColor}` }}\n        >\n          <h2 className=\"tabTitle\">\n            {this.props.name}\n            <button\n              onClick={() => this.props.toggleHide(this.props.id)}\n              className=\"hideBtn\"\n            >\n              {this.props.visibility === \"show\" ? <div>hide</div> : <div>show</div>}\n            </button>\n            \n              \n            \n          </h2>\n          <div className=\"topCircleWrapper\">\n          <div\n                id=\"outerCircleS\"\n                style={{\n                  background: `conic-gradient(#f865b0 ${\n                    this.props.totalTime / (this.props.goal / 100)\n                  }%, #2d3740 ${\n                    this.props.totalTime / (this.props.goal / 100)\n                  }% 100%)`,\n                }}\n              >\n                <div id=\"innerCircleS\"></div>\n              </div>\n              </div>\n        </div>\n        {this.props.visibility === \"show\" ? <div\n          className=\"tab tabBody \"\n          style={{  background: `#${this.props.bcgColor}`}}\n        >\n          <div className=\"quote\">\n            {(this.props.seriuos === \"false\") ? \n            \n            <div><i className=\"quoteText\">{`\"${this.props.quote}\"`}</i>\n            <p className=\"sign\">{this.props.author}</p></div> : \n            <p>{this.props.joke}</p>\n            }\n            \n            \n          </div>\n          \n          \n          <div className=\"info\">\n            <div>\n            <form\n            className=\"topForm\"\n            onSubmit={(e) =>\n              this.handleSubmit(e, e.target.timeInput.value, this.props.id)\n            }\n          >\n            <label id=\"todayLabel\">Today I was {this.props.name} for:</label>\n            <br />\n            <input\n              type=\"number\"\n              value={this.state.time}\n              id=\"timeInput\"\n              onChange={this.handleChange}\n            />\n            <br />\n            <button>Add</button>\n          </form>\n            <div className=\"ulWrapper\">\n            <p className=\"lastWeek\">Last week:</p>\n            <ul className=\"weekTimes\">\n              {this.props.times.map((time) => (\n                <li key={Math.random()} className=\"timeLi\">{time}\n                </li>\n              ))}\n            </ul>\n          </div>\n            <div className=\"infoLine\">\n              <p>Week total: </p>\n              <span>{this.props.totalTime}</span>\n            </div>\n            <div className=\"infoLine\">\n              <p>Week average: </p>\n              <span>{this.props.avarageTime}</span>\n            </div>\n            <div className=\"infoLine\">\n              <p>Week high: </p>\n              <span>{this.props.max}</span>\n            </div>\n            </div>\n            <br />\n                  <div className=\"rightWrapper\">\n                  <p className=\"weekGoal\">\n              Your weekly goal:{\" \"}<br/>\n              {this.props.totalTime >= this.props.goal\n                ? `(${this.props.totalTime} hours) is complete!`\n                : `${this.props.totalTime} / ${this.props.goal}`}\n              <br />\n            </p>\n            <div className=\"progressCircleWrapper\">\n              <div\n                id=\"outerCircle\"\n                style={{\n                  background: `conic-gradient(#f865b0 ${\n                    this.props.totalTime / (this.props.goal / 100)\n                  }%, #2d3740 ${\n                    this.props.totalTime / (this.props.goal / 100)\n                  }% 100%)`,\n                }}\n              >\n                <div id=\"innerCircle\"></div>\n              </div>\n            </div>\n            <div>\n            \n            <button\n              className=\"delTab\"\n              onClick={() => this.props.delTab(this.props.id)}\n            >\n              delete activity\n            </button>\n            </div>\n          </div>\n          </div>\n        </div> : <div></div>}\n        \n      </div>\n    );\n  }\n}\n\nexport default Tab;\n","import React, {useEffect} from \"react\";\nimport TopForm from \"./components3/TopForm\";\nimport Tab from \"./components3/Tab\";\nimport \"../src/App.css\";\nimport axios from \"axios\";\n\nclass App3 extends React.Component {\n  state = {\n    startId: 0,\n    tasks: [],\n    bcgColors: [\"b7e4c7\", \"95d5b2\", \"74c69d\", \"52b788\", \"40916c\"],\n    quote: \"\",\n    author: \"\",\n    dataF: [],\n    errorMsgName: \"\",\n    errorMsgGoal: \"\",\n    wheater: {},\n    joke: \"\"\n  };\n\n  \n    \n \n\n  componentDidMount() {\n    const that = this;\n    fetch(\"https://type.fit/api/quotes\")\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (jsonData) {\n        return jsonData;\n      })\n      .then((jsonData) => {\n        this.setState({ dataF: jsonData });\n\n        let random = parseInt(Math.random() * this.state.dataF.length);\n\n        this.setState({\n          quote: this.state.dataF[random].text,\n          author: this.state.dataF[random].author,\n        });\n      });\n      this.takeJoke()\n      \n  }\n\n  takeJoke= ()=>{\n    const result = axios.get(\"https://api.chucknorris.io/jokes/random\")\n      .then(res => {\n        const joke = res.data\n        console.log(\"joke\", joke.value);\n        this.setState({\n          joke: joke.value\n        })\n      })\n  }\n\n  randomQuote = () => {\n    let random = parseInt(Math.random() * this.state.dataF.length);\n    console.log(\"random\", random);\n    this.setState({\n      quote: this.state.dataF[random].text,\n      author: this.state.dataF[random].author,\n    });\n\n    console.log(this.state.quote);\n  };\n\n  addTask = (name, goal, serious) => {\n    this.randomQuote();\n    this.takeJoke();\n    this.setState({\n      errorMsgGoal: \"\",\n      errorMsgName: \"\",\n    });\n\n    if (!name) {\n      this.setState({ errorMsgName: `Give activity a name` });\n      return;\n    }\n    if (!goal) {\n      this.setState({ errorMsgGoal: `Set a goal` });\n      return;\n    }\n\n    const task = {\n      id: this.state.startId,\n      name: name,\n      times: [],\n      totalTime: 0,\n      avarageTime: 0,\n      goal: goal,\n      weekMax: 0,\n      bcgColor: this.state.bcgColors[\n        parseInt(Math.random() * this.state.bcgColors.length)\n      ],\n      quote: this.state.quote,\n      author: this.state.author,\n      visibility: \"show\",\n      joke: this.state.joke,\n      seriuos: serious\n    };\n\n    \nconsole.log(\"ser\", task.seriuos);\n    const tempTasks = [...this.state.tasks, task];\n    tempTasks.reverse()\n    this.setState({\n      tasks: tempTasks,\n      startId: this.state.startId + 1,\n    });\n  };\n\n  delTask = (id) => {\n    console.log(\"ddd\");\n    const delActivities = this.state.tasks.filter((task) => id !== task.id);\n    this.setState({\n      tasks: [...delActivities],\n    });\n  };\n\n  addTime = (time, id) => {\n    const tempActivities = [...this.state.tasks];\n    tempActivities.map((task) => {\n      if (id === task.id && !time) {\n        time = \"\";\n        console.log(\"mniej niz 0\");\n        task.totalTime = 0;\n        task.avarageTime = 0;\n        task.weekMax = 0;\n      }\n\n      if (task.times.length > 6) {\n        task.times.shift();\n      }\n\n      if (id === task.id) {\n        task.times.push(Number(time));\n      } else {\n        return;\n      }\n\n      task.totalTime = task.times.reduce((p, c) => p + c);\n      task.avarageTime = (task.totalTime / task.times.length).toFixed(1);\n      task.weekMax = Math.max(...task.times);\n      console.log(\"total\", task.totalTime);\n      console.log(\"average\", task.avarageTime);\n      console.log(\"max\", task.weekMax);\n    });\n    this.setState({\n      tasks: tempActivities,\n    });\n    console.log(\"time from tab\", time);\n    console.log(\"tasks after time\", tempActivities);\n  };\n\n  toggleHide = (id) => {\n    const tempTasks = this.state.tasks;\n    tempTasks.map((task) => {\n      if (task.id === id) {\n        task.visibility === \"show\"\n          ? (task.visibility = \"hidden\")\n          : (task.visibility = \"show\");\n      }\n      console.log(task.visibility);\n    });\n    this.setState({\n      tasks: tempTasks,\n    });\n  };\n\n  render() {\n    const taskList = this.state.tasks.map((task) => (\n      <Tab\n        id={task.id}\n        name={task.name}\n        key={task.id}\n        addTime={this.addTime}\n        delTab={this.delTask}\n        toggleHide={this.toggleHide}\n        totalTime={task.totalTime}\n        avarageTime={task.avarageTime}\n        times={task.times}\n        goal={task.goal}\n        max={task.weekMax}\n        bcgColor={task.bcgColor}\n        quote={task.quote}\n        author={task.author}\n        visibility={task.visibility}\n        seriuos={task.seriuos}\n        joke={task.joke}\n      />\n    ));\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <TopForm\n          addTask={this.addTask}\n          errorMsgName={this.state.errorMsgName}\n          errorMsgGoal={this.state.errorMsgGoal}\n        />\n        <div className=\"tabsWrapper\">{taskList}</div>\n        <div></div>\n      </div>\n    );\n  }\n}\n\nexport default App3;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App3 from '../src/App3';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App3 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}